<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 10.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="10.0">
 <Namespaces>
  <Namespace Name="CR_SmartQuotes">
   <Messages>
    <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-10-19 14:47:01Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="95" Level="Error">Remove the underscores from namespace name 'CR_SmartQuotes'.</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="D:\Development\Dev-OpenSource\dxcorecommunityplugins\Distro\Build\Release\CR_SmartQuotes.dll">
   <Modules>
    <Module Name="cr_smartquotes.dll">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2010-10-19 14:47:01Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'CR_SmartQuotes.dll' with a strong name key.</Issue>
      </Message>
      <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-10-19 14:47:01Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="95" Level="Error">Remove the underscores from assembly name 'CR_SmartQuotes.dll'.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2010-10-19 14:47:01Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'CR_SmartQuotes.dll' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824" Status="Active" Created="2010-10-19 14:47:01Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Warning">Because assembly 'CR_SmartQuotes.dll' contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="CR_SmartQuotes">
       <Types>
        <Type Name="SmartQuoteOptions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetCategory()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2010-10-19 14:47:01Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="d:\Development\Dev-OpenSource\dxcorecommunityplugins\Distro\Build\Source\Export\CR_SmartQuotes\CR_SmartQuotes" File="SmartQuoteOptions.cs" Line="10">Change 'SmartQuoteOptions.GetCategory()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPageName()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2010-10-19 14:47:01Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="d:\Development\Dev-OpenSource\dxcorecommunityplugins\Distro\Build\Source\Export\CR_SmartQuotes\CR_SmartQuotes" File="SmartQuoteOptions.cs" Line="15">Change 'SmartQuoteOptions.GetPageName()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2010-10-19 14:47:01Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="d:\Development\Dev-OpenSource\dxcorecommunityplugins\Distro\Build\Source\Export\CR_SmartQuotes\CR_SmartQuotes" File="SmartQuoteOptions.Designer.cs" Line="107">Method 'SmartQuoteOptions.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Auto-complete double quotes".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="d:\Development\Dev-OpenSource\dxcorecommunityplugins\Distro\Build\Source\Export\CR_SmartQuotes\CR_SmartQuotes" File="SmartQuoteOptions.Designer.cs" Line="169">Method 'SmartQuoteOptions.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Auto-complete quotes".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="d:\Development\Dev-OpenSource\dxcorecommunityplugins\Distro\Build\Source\Export\CR_SmartQuotes\CR_SmartQuotes" File="SmartQuoteOptions.Designer.cs" Line="89">Method 'SmartQuoteOptions.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Easy-delete empty double quotes".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="d:\Development\Dev-OpenSource\dxcorecommunityplugins\Distro\Build\Source\Export\CR_SmartQuotes\CR_SmartQuotes" File="SmartQuoteOptions.Designer.cs" Line="160">Method 'SmartQuoteOptions.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Easy-delete empty quotes".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="d:\Development\Dev-OpenSource\dxcorecommunityplugins\Distro\Build\Source\Export\CR_SmartQuotes\CR_SmartQuotes" File="SmartQuoteOptions.Designer.cs" Line="80">Method 'SmartQuoteOptions.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Ignore closing double quote typed in the end of string".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="d:\Development\Dev-OpenSource\dxcorecommunityplugins\Distro\Build\Source\Export\CR_SmartQuotes\CR_SmartQuotes" File="SmartQuoteOptions.Designer.cs" Line="142">Method 'SmartQuoteOptions.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Ignore closing quote typed in the end of char".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="d:\Development\Dev-OpenSource\dxcorecommunityplugins\Distro\Build\Source\Export\CR_SmartQuotes\CR_SmartQuotes" File="SmartQuoteOptions.Designer.cs" Line="117">Method 'SmartQuoteOptions.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Use Smart Double Quotes".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="d:\Development\Dev-OpenSource\dxcorecommunityplugins\Distro\Build\Source\Export\CR_SmartQuotes\CR_SmartQuotes" File="SmartQuoteOptions.Designer.cs" Line="179">Method 'SmartQuoteOptions.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Use Smart Quotes".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="d:\Development\Dev-OpenSource\dxcorecommunityplugins\Distro\Build\Source\Export\CR_SmartQuotes\CR_SmartQuotes" File="SmartQuoteOptions.Designer.cs" Line="98">Method 'SmartQuoteOptions.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Use text fields".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="d:\Development\Dev-OpenSource\dxcorecommunityplugins\Distro\Build\Source\Export\CR_SmartQuotes\CR_SmartQuotes" File="SmartQuoteOptions.Designer.cs" Line="151">Method 'SmartQuoteOptions.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Use text fields".</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303">
   <Name>Do not pass literals as localized parameters</Name>
   <Description>Literal strings that are embedded in source code are difficult to localize. Avoid passing literal strings as arguments in circumstances where a localized string is generally expected.</Description>
   <Resolution Name="KnownValue">Method {0} passes a literal string as parameter '{1}' of a call to {2}. Retrieve the following string(s) from a resource table instead: {3}.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182187(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707">
   <Name>Identifiers should not contain underscores</Name>
   <Description>Do not use underscores when specifying identifiers. Some generated Visual Studio identifiers for applications contain underscore characters. Underscore characters should generally be avoided in public identifiers.</Description>
   <Resolution Name="Assembly">Remove the underscores from assembly name {0}.</Resolution>
   <Resolution Name="Namespace">Remove the underscores from namespace name '{0}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182245(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824">
   <Name>Mark assemblies with NeutralResourcesLanguageAttribute</Name>
   <Description>The NeutralResourcesLanguage attribute informs the ResourceManager of the language used to render the neutral culture's resources for an assembly. When looking up resources in the same culture as the neutral resources language, the ResourceManager automatically uses the resources located in the main assembly, instead of searching for a satellite assembly with the current user interface culture for the current thread. This will improve lookup performance for the first resource you load and can reduce your working set.</Description>
   <Resolution Name="Default">Because assembly {0} contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb385967(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
   <Name>Use properties where appropriate</Name>
   <Description>Properties should be used instead of Get/Set methods in most situations. Methods are preferable to properties in the following situations: the operation is a conversion, is expensive or has an observable side-effect; the order of execution is important; calling the member twice in succession creates different results; a member is static but returns a mutable value; or the member returns an array.</Description>
   <Resolution Name="Default">Change {0} to a property if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182181(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
 <Exceptions>
  <Exception Keyword="CA0060" Kind="Engine" TreatAsWarning="True">
   <Type>Microsoft.FxCop.Sdk.FxCopException</Type>
   <ExceptionMessage>The indirectly-referenced assembly 'EnvDTE, Version=7.0.3300.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' could not be found. This assembly is not required for analysis, however, analysis results could be incomplete. This assembly was referenced by: C:\PROGRAM FILES (X86)\DEVEXPRESS 2010.1\IDETOOLS\System\DXCore\Bin\DevExpress.CodeRush.Core.dll, C:\PROGRAM FILES (X86)\DEVEXPRESS 2010.1\IDETOOLS\System\DXCore\Bin\DevExpress.CodeRush.StructuralParser.dll.</ExceptionMessage>
  </Exception>
 </Exceptions>
</FxCopReport>
